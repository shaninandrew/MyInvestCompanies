@page "/"

@using MyInvestCompanies;
@using MyInvestCompanies.модель_данных;

@code 
{
    [Parameter]
    public string query_string  { get; set;} = "";

    [Parameter]
    public static string query_sub_page { get; set; } = "main";

    public static string Company_id { get; set; } = "";

    public static string __DATE_MASK = "yyyy-MM-dd";

    public  static  string Selected_Holder = "";

    public  static  bool Allow_delete = false;

    public static bool _FLAG_show_doc_editor = true;

    public static string Deal_id = "";
    public static string Invest_id = "";

    public static string Acquisition_id = "";


    /// Переключалка  
    public static void Switch_delete()
    { 
        Allow_delete= (!Allow_delete );
    }

    /// Подключаем черный ящик c функциями
    public Functions f = new Functions();

    public static string Selected_document = "";


}


@{
    ///
    /// Редактор компаний в-строку
    async void ShowRowEditor_company(Company c,string Selected_company_id)
    {

        List<string> NameX = new List<string>();
        NameX.Add("Name");

        string table = "Companies";
        <!--  @onmouseover="(e=> { Company_id = c.Id; } -->
        
        
        string  class_x="Editor";
        if (Selected_company_id!=null)
        {
            if (c.Id == Selected_company_id)
                {  class_x="Editor_selected"; }
        }

        <tr class=@class_x>
            <td>
                <input type="text" value="@c.Name" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=>  { f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e, null, table );  })" />
            </td>

            <td>
             @{
                 NameX.Add("Founded");
                 string tmp_date = c.Founded.Date.ToUniversalTime().ToString(__DATE_MASK);
                }
            <input type=date value="@tmp_date" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Selected_document=String.Empty;  Company_id = c.Id; })" @onchange="(e=> {  f.Set_value(NameX[1], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
            </td>

            @{NameX.Add("Address");}
            <td>
            <input type="text" value="@c.Address" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=> { Selected_document=String.Empty;  f.Set_value(NameX[2], c.Id.ToString(), e.Value.ToString() , e, null , table); })" />
            </td>

            @{NameX.Add("Fact_Address"); }
            <td>
            <input type="text" value="@c.Fact_Address" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=> { Selected_document=String.Empty; f.Set_value(NameX[3], c.Id.ToString(), e.Value.ToString() , e, null,table);  })" />
            </td>
            @{NameX.Add("Description"); }
            <td>
            <input type="text" value="@c.Description" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=> { Selected_document=String.Empty; f.Set_value(NameX[4], c.Id.ToString(), e.Value.ToString() , e, null, table);  })" />
            </td>

            @{NameX.Add("Inn"); }
            <td>
            <input type="number" value="@c.Inn" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=> { Selected_document=String.Empty;  f.Set_value(NameX[5], c.Id.ToString(), e.Value.ToString() , e, null, table);  })" />
            </td>
            
            @{NameX.Add("KPP"); }
            <td>
            <input type="number" value="@c.KPP" @onfocus="(e=> { Company_id = c.Id; })" @onclick="(e=> { Company_id = c.Id; })" @onchange="(e=> { Selected_document=String.Empty;  f.Set_value(NameX[6], c.Id.ToString(), e.Value.ToString() , e, null , table );  })" />
            </td>
            
            @if (Allow_delete)
            {
                <td>
                <button  class="delete_button" title="Удалить запись @c.Name @c.Address" @onclick="(e=> {f.Delete_company(c.Id.ToString(), null) ;} )">-</button>
                </td>
            }
        </tr>
        
    }

    /// Показывает связи
    void Show_Linx (string company_id)
    {
        Database_structure ds = new Database_structure();
        string id = company_id;
        //спиоск связей
        List<Link> links =  ds.Links.Where<Link>(L => L.Parent_Id == id).ToList<Link>();
        <!--
        <div>
            @foreach (Link l in links)
            {
                @l.Child_Id @l.Child_table<br />

            }
        </div>
        -->
        ds.Dispose();

    }


    async void Show_Table_Docs_as_EditableList (List<Document> docs, bool show_viewer)
    {

        Comparison<Document> x_comp = new Comparison<Document>(delegate (Document x, Document y) { return (x.Id.CompareTo(y.Id)); });
        docs.Sort(x_comp);

        string table = "Documents";
        List<string> NameX = new List<string>();

        NameX.Add("Num");
        NameX.Add("Date");
        NameX.Add("Name");
        NameX.Add("Url");

        @if (docs.Count > 0)
        {
            <table class="scroll" style="width:100%">
                    <tr class="card_title">

                    @foreach (String n in NameX)
                    {
                        <td>@n</td>
                    }
                    <td> </td>
                    </tr>

                    @foreach (Document c in docs)
                    {
                        string tmp_date = "";
                        tmp_date = c.Date.ToString(__DATE_MASK);


                    

                        <tr class="Editor">
                            <td>
                                <input type="text" value="@c.Num" @onclick="(e=>{ Selected_document = c.Id;  })" @onchange="(e=> {  f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e,null, table); })">
                            </td>
                            <td>
                                <input type="date" value="@tmp_date" @onclick="(e=>{ Selected_document = c.Id;  })" @onchange="(e=> {  f.Set_value(NameX[1], c.Id.ToString(), e.Value.ToString() , e,null, table); })">
                            </td>

                            <td>
                                <textarea class="card_editor" @onclick="(e=>{ Selected_document = c.Id;  })" type="text" rows="2" value="@c.Name" @onchange="(e=> {  f.Set_value(NameX[2], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
                            </td>

                            <td>
                                <input type="url" value="@c.Url" @onclick="(e=>{ Selected_document = c.Id;  })" @onchange="(e=> {  f.Set_value(NameX[3], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
                            </td>
                            <td>
                                @if (Allow_delete)
                                {
                                    <button class="delete_button" title="Удалить запись @c.Num @tmp_date" @onclick="(e=> { f.Delete_Document(c.Id.ToString()) ;} )">-</button>
                                }
                            </td>
                        </tr>
                    }

                    <!--  //foreach -->
             
               
            </table>
        }
        else
        {
            @("Нет данных.")

        }

    } <!-- function -->



    /// Показ любой таблицы
    async void Show_Table (string company_id, string table_name, bool show_additional_editor)
    {
        Database_structure ds = new Database_structure();
        string id = company_id;
        string Company_title = "";
        // показ имени связанной строики
        if (Company_id != "")
        {
            Company selected = ds.Companies.Where(i => i.Id == Company_id).Single();
            Company_title = "«" + selected.Name + " | ИНН" + selected.Inn + "»";
        }

        if (table_name == "Capitals")
        {
            <div class="Header">
                Уставный капитал @Company_title
            </div>
            <div class="Control">
                <Button class="button" title="Добавляет размер уставного капитал" @onclick="(e=>{ f.AddCapital(id); })"> Добавить капитал </Button>
            </div>

            List<Capital> list_of_capital = ds.Capitals.Where<Capital>(C => C.Id_company == company_id).ToList<Capital>();
            Comparison<Capital> x_comp = new Comparison<Capital>(delegate (Capital x, Capital y) { return (x.Id.CompareTo(y.Id)); });
            list_of_capital.Sort(x_comp);



            string table = "Capitals";
            List<string> NameX = new List<string>();
            NameX.Add("Sum");
            NameX.Add("Date");

            @if (list_of_capital.Count>0)
            {
            <div class="card">
                <table>
                    <tr class="card_title">
                        @foreach (String n in NameX)
                        {
                            <td>@n</td>
                        }
                        <td> </td>
                    </tr>

                    <!-- выводных уставного капитала -->            
                    @foreach (Capital c in list_of_capital)
                    {
                        string tmp_date = "";

                        if (c.Date.HasValue)
                        {
                            tmp_date = c.Date.Value.ToString(__DATE_MASK);
                        }

                        <tr>
                            <td>
                                <input type="number" value="@c.Sum"     @onchange="(e=> {  f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e,null, table); })">
                            </td>
                            <td>
                                <input type="date"  value="@tmp_date"    @onchange="(e=> {  f.Set_value(NameX[1], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
                            </td>
                            <td>
                                @if (Allow_delete)
                                {

                                    <button class="delete_button" title="Удалить запись @c.Sum @c.Date" @onclick="(e=> {f.Delete_capital(c.Id.ToString()) ;} )">-</button>

                                }
                            </td>
                        </tr>
                    }
                    <!-- //foreach -->
                </table>
            </div>
            } <!-- if count > 0 -->
        } <!-- Capital -->

        
        if (table_name == "Acquisitions")
        {
            <!--обоснования для сделок-->
            <div class="Header">
                Обоснования для @Company_title
            </div>

            <div class="Control">
                <Button class="button" title="Добавляет обоснования" @onclick="(e=>{ f.Add_Acq(id); })">Добавить обоснование</Button>
            </div>

            List<Acquisition> list_of_Acq = ds.Acquisitions.Where<Acquisition>(c => c.Id_company == company_id).ToList();
            
            Comparison<Acquisition> x_comp = new Comparison<Acquisition>(delegate (Acquisition x, Acquisition y) { return (x.Id.CompareTo(y.Id)); });
            list_of_Acq.Sort(x_comp);

            string table = "Acquisitions";
            
            
            List<string> NameX = new List<string>();
            NameX.Add("Description");

            <div class="card">
                <div class="scroll">
                    <div style="height:300px;">
                        <table style="width:100%">
                            <tr class="card_title">
                                @foreach (String n in NameX)
                                {
                                    <td>@n</td>
                                }
                                <td> </td>
                                <td> </td>
                            </tr>

                            @foreach (Acquisition c in list_of_Acq)
                            {
                                string class_x = "Editor";
                                if (c.Id == Acquisition_id)
                                    { class_x = "Editor_selected"; }

                                <tr class="@class_x">
                                    <td>
                                        <textarea @onclick="(e=>{ Acquisition_id=c.Id; })" @onchange="(e=> {  f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e,null, table); })" value="@c.Description">  </textarea>
                                    </td>
                                 

                                    <td>
                                        <button @onclick="(e=> { f.Add_Document_for_Acq(c.Id.ToString()) ; _FLAG_show_doc_editor= true;} )"> +Документ </button>
                                    </td>

                                    <td>
                                        @if (Allow_delete)
                                        {
                                            <button class="delete_button" title="Удалить запись @c.Description" @onclick="(e=> { f.Delete_Acq (c.Id.ToString()) ;} )">-</button>
                                        }
                                    </td>

                                    <td align="center">
                                        <button class="button" title="Открыть панель редактирования документов" @onclick="(e=>{ _FLAG_show_doc_editor=!_FLAG_show_doc_editor; })"> * </button>
                                    </td>

                                </tr>

                            }
                        </table>
                    </div>
                </div>

                @if (_FLAG_show_doc_editor)
                {
                    <div class="card">

                        @("Выбранное дело  (" + @Acquisition_id + ")")
                        @{
                            Show_Table(Acquisition_id, "Documents", false);
                        }
                    </div>
                }


            </div>



        }

        if (table_name == "Investitions")
        {
                <div class="Header">
                    Инвестиции @Company_title
                </div>

                <div class="Control">
                    <Button class="button" title="Добавляет размер вложенных инвестиций" @onclick="(e=>{ f.AddInvestitions(id); })">Добавить инвестицию</Button>
                </div>

                List<Invest> list_of_Investitions = ds.Investitions.Where<Invest>(c => c.Id_company == company_id).ToList();
                Comparison<Invest> x_comp = new Comparison<Invest>(delegate (Invest x, Invest y) { return (x.Id.CompareTo(y.Id)); });
                list_of_Investitions.Sort(x_comp);

                string table = "Investitions";
                List<string> NameX = new List<string>();
                NameX.Add("Method");
                NameX.Add("Source");

                <div class="card">
                <div class="scroll">
                <div style="height:300px;">
                        <table style="width:100%">
                         <tr class="card_title">
                            @foreach (String n in NameX)
                            {
                                <td>@n</td>
                            }
                            <td> </td>
                            <td> </td>
                        </tr>
                
                    @foreach (Invest c in list_of_Investitions)
                    {
                            string class_x = "Editor";
                            if (c.Id == Invest_id)
                                { class_x = "Editor_selected"; }

                            <tr class=@class_x>
                                <td>
                                    <input type="text" value="@c.Method" @onclick="(e=>{ Invest_id=c.Id; })"  @onchange="(e=> {  f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e,null, table); })">
                                </td>
                                <td>
                                    <textarea class="card_editor" type="text" rows="2" value="@c.Source" @onclick="(e=>{ Invest_id=c.Id; })"  @onchange="(e=> {  f.Set_value(NameX[1], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
                                </td>

                                    <td>
                                    <button @onclick="(e=> { f.Add_Document_for_Invest(c.Id.ToString()) ; _FLAG_show_doc_editor= true;} )"> +Документ </button>
                                    </td>
                        
                                    <td>
                                        @if (Allow_delete)
                                        {
                                            <button class="delete_button" title="Удалить запись @c.Method @c.Source" @onclick="(e=> { f.Delete_Investitions(c.Id.ToString()) ;} )">-</button>
                                        }
                                    </td>

                                    <td align="center">
                                     <button class="button" title="Открыть панель редактирования документов" @onclick="(e=>{ _FLAG_show_doc_editor=!_FLAG_show_doc_editor; })"> * </button>
                                    </td>

                            </tr>
            
                    }   
                    </table>
                    </div>
                </div>

                    @if (_FLAG_show_doc_editor)
                    {
                        <div class="card">
                          
                            @("Выбранное дело  (" + @Invest_id + ")")
                            @{
                                Show_Table(Invest_id, "Documents", false);
                            }
                        </div>
                    }
                

             </div>
        } <!-- if -->

        //Deals
        if (table_name == "Deals")
        {
            <div class="Header">
                Сделки @Company_title
            </div>

            <div class="Control">
                <Button class="button" title="Добавляет список сделок" @onclick="(e=>{ f.Add_Deal(id); })">Добавить сделку</Button>
            </div>

            List<Deal> list_of_Deals = ds.Deals.Where<Deal>(c => c.Id_company == company_id).ToList();
            Comparison<Deal> x_comp = new Comparison<Deal>(delegate (Deal x, Deal y) { return (x.Id.CompareTo(y.Id)); });
            list_of_Deals.Sort(x_comp);

            string table = "Deals";
            List<string> NameX = new List<string>();
            NameX.Add("Date");
            NameX.Add("Description");
            
            <div class="scroll">
            <div style="height:300px;">
            <div class="card">
            <table style="width:100%" >
                    <tr class="card_title">
                    @foreach (String n in NameX)
                    {
                        <td>@n</td>
                    }
                    <td> </td>
                    <td> </td>
                </tr>

                @foreach (Deal c in list_of_Deals)
                {
                        string tmp_date = "";

                        if (c.Date.HasValue)
                        {
                            tmp_date = c.Date.Value.ToString(__DATE_MASK);
                        }

                        string  class_x="Editor";
                        if (c.Id == Deal_id)
                            {  class_x="Editor_selected"; }

                     <tr class=@class_x>
                        <td>
                             <input type="date" value="@tmp_date" @onclick="(e=>{ Deal_id=c.Id; })" @onchange="(e=> {  f.Set_value(NameX[0], c.Id.ToString(), e.Value.ToString() , e,null, table); })">
                         </td>
                         <td>  
                            <textarea class="card_editor" type="text" rows="2" @onclick="(e=>{ Deal_id=c.Id; })" value="@c.Description" @onchange="(e=> {  f.Set_value(NameX[1], c.Id.ToString(), e.Value.ToString() , e,null, table); })" />
                         </td>
                         
                         <td >
                                <button class="button" title="Добавить документ к сделке от @c.Date.ToString()" @onclick="(e=> { f.Add_Document_for_Deal(c.Id.ToString()) ; _FLAG_show_doc_editor= true;} )">+Документ</button>
                        </td>

                         <td>
                          @if (Allow_delete)
                                {
                                    <button class="delete_button" title="Удалить запись @c.Date @c.Description" @onclick="(e=> { f.Delete_Deal(c.Id.ToString()) ;} )">-</button>
                                }
                         </td>

                        <td align="center">
                            <button class="button" title="Открыть панель редактирования документов" @onclick="(e=>{ _FLAG_show_doc_editor=!_FLAG_show_doc_editor; })"> * </button>
                        </td>
                    </tr>
                }    
            </table>
            </div>
            </div>
            </div>

            if (_FLAG_show_doc_editor)
            {
                <div class="card">
                        @("Выбранное дело  (" + @Deal_id+ ")")
                        @{ Show_Table(Deal_id, "Documents",false);}
                </div>
            }

        }


        //Documents 
        // Глабальная  вкладка
        if (table_name == "Documents")
        {
            <div class="Header">
                Документы связанные с @Company_title
            </div>

            <!-- показывает кнопки создания документиов -->
            @if (show_additional_editor)
            {
                <div class="Control">
                    <Button class="button" title="Добавляет документ" @onclick="(e=>{ f.Add_Document (id); })">+Документ</Button>
                </div>
            }

            <div  style="width:auto; height:auto">
               
               <div  style="height:510px">
                 <div class="card_layout">
                  
                 <div class="card">
                    <div class="scroll">
                    <div style="height:500px">

                        @{

                            List<Document> list_of_docs = new List<Document>();
                            //Документы от фирмы сразу напрямую
                            foreach (Link l in ds.Links.Where<Link>(i => i.Parent_Id == company_id).ToList<Link>())
                            {  list_of_docs.AddRange( ds.Documents.Where<Document>(c => c.Id == l.Child_Id  ).ToArray<Document>()); }

                            //LINQ Join Доки + Связка + Сделка где id_company= Дело
                            foreach (Document docx in (from d in ds.Documents
                                                    join l in ds.Links on d.Id equals l.Child_Id
                                                    join deals in ds.Deals on l.Parent_Id equals deals.Id
                                                    where deals.Id_company==company_id 
                                                    select d).ToList<Document>()
                                                    )
                                        { list_of_docs.Add(docx); }


                            //LINQ Join Доки + Связка + Сделка где id_company= Дело
                            foreach (Document docx in (from d in ds.Documents
                                                        join l in ds.Links on d.Id equals l.Child_Id
                                                        join inv in ds.Investitions on l.Parent_Id equals inv.Id
                                                        where inv.Id_company == company_id
                                                        select d).ToList<Document>()
                            )
                            { list_of_docs.Add(docx); }


                            //LINQ Join Доки + Связка + Описание где id_company= Дело
                            foreach (Document docx in (from d in ds.Documents
                                                        join l in ds.Links on d.Id equals l.Child_Id
                                                        join A in ds.Acquisitions on l.Parent_Id equals A.Id
                                                        where A.Id_company == company_id
                                                        select d).ToList<Document>()
                            )
                            { list_of_docs.Add(docx); }


                    if (list_of_docs.Count == 0)
                    {
                                            @("Данных нет")
                                            ;

                                        }
                                        else
                                        {
                                            Show_Table_Docs_as_EditableList(list_of_docs, true);

                                        }
                                    } <!-- есть данные --->

                                </div>
                            </div>

                        </div> <!--card-->

                        @if (show_additional_editor)
                        {
                            <div class="card">
                                <div class="card_title">
                                    @if (Selected_document != "")
                                    {
                                        @( "Выбранный документ : " + @Selected_document  )

                                    }
                                    else
                                    {
                                        @( "Выберите документ "   )
                                    }

                                </div>
                                <div class="card_editor">
                                    <div class="scroll">
                                        Карточка редактор 
                                    </div>
                                </div>

                            </div>
                        }

                </div> <!-- card style- -->
            </div>



            </div> <!--scroll-->
        
        }

        if (ds!=null)
        {
            ds.Dispose();
            GC.Collect();
        }

    }

    // --- Загрузка  данных ---
    Database_structure db_index = new Database_structure();
    List<Company> list_of_companies = null;
    Console.Write("Отображение редактора ...");

    if ((query_string != "") && (query_string.Length > 0)  )
    {
        list_of_companies = new List<Company>();
        list_of_companies.Clear();

        foreach (Company c in db_index.Companies.ToList<Company>().AsParallel())
        {
            string t = c.Inn + c.Name + c.Address + c.KPP + c.Description + c.Fact_Address;
            if (t.IndexOf(query_string, StringComparison.OrdinalIgnoreCase) > -1)
            {
                list_of_companies.Add(c);
            }
        }

        //поиск по реквизитам владельца
        foreach (Owner o in db_index.Owners.ToList<Owner>().AsParallel())
        {
            string t = o.Inn + o.Name + o.Address + o.KPP + o.Email + o.PhoneNumber;
            if (t.IndexOf(query_string, StringComparison.OrdinalIgnoreCase) > -1)
            {

                List<HolderReestr> Holders = db_index.HolderReestrs.Where<HolderReestr>(h => h.Owner_Id == o.Id).ToList();

                foreach (HolderReestr h in Holders)
                {
                    Company c = db_index.Companies.Where(cx => cx.Id == h.Company_Id).Single();
                    list_of_companies.Add(c);
                }
            }
        }
        //Удаление дублей
        list_of_companies.Distinct();
    }
    else
    {
        list_of_companies = db_index.Companies.ToList<Company>(  );
    }


    //сортировка
    Comparison<Company> x_comp = new Comparison<Company>(delegate( Company x, Company y) { return (x.Id.CompareTo(y.Id)); });
    list_of_companies.Sort(x_comp);
    db_index.Dispose();

}




<!--- ВЕБ МОРДА ОСНОВНАЯ ЧАСТЬ --->

<!-- веб часть -->
<div class="Search">
Поиск компаний  <input class="search_string" title="Поисковая строка" type="text" @bind-value=query_string @bind-value:event="oninput" />
</div>


<div class="Header">
Список компаний в базе данных
</div>

<div class="Control">
<!--- делаем через лябмду - иначе кнопка запускается автоматом -->
    <button class="button" @onclick="(e)=>{  f.Add_company(null); }">Добавить компанию </button> 
    <button class="button" @onclick="(e)=>{  Switch_delete(); }"> Разрешить/запретить удаление </button>
    | Тестовая инфа: @Company_id
</div>
<br />

<!-- компании -->
<div class="scroll">
    <div style="height:300px;  background:#00000068 ; ">
        <!-- вывод списка -->
        <table  style="width:100%">
        @foreach (Company c in list_of_companies)
                {
                ShowRowEditor_company(c, Company_id);
            }
        </table>
        @{
            Console.WriteLine("Оk ...");
            GC.Collect()          ;
        }
    </div>
</div>


    <div class="menu">
            <div class="menu_header">
                <button class="button"              @onclick="set_main_page"    > Данные о фирме</button> 
                <button class="button"              @onclick="set_holders_page" > Данные о владельцах</button> 
                <button class="button"              @onclick="set_doc_page">   Список документов</button> 
            </div>

    @if (query_sub_page=="main")
    {
         <div id="menu_about_firm">
                    <div class="Header"> Связанные данные для
                        @{
                            // показ имени связанной строики
                            if (Company_id != "")
                            {
                                db_index = new Database_structure();
                                Company selected = db_index.Companies.Where(i => i.Id == Company_id).Single();
                                db_index.Dispose();
                                //@("«" + selected.Name +" | ИНН"+ selected.Inn +"»")
                            }
                        }
                    </div>

                <div class="card_layout">
                    <div style="Сard" >
                            @{
                                if (Company_id != null)
                                {
                                    if (Company_id!="")
                                        Show_Table(Company_id, "Capitals",false);
                                }
                            }
                    </div>

                    <div style="Card">
                        @{
                            if (Company_id != null)
                            {
                                if (Company_id != "")
                                    Show_Table(Company_id, "Investitions",false);
                            }
                        }
                    </div>


                    <div style="Card">
                        @{
                            if (Company_id != null)
                            {
                                if (Company_id != "")
                                        Show_Table(Company_id, "Deals",false);
                            }
                        }
                    </div>

                <div style="Сard">
                    @{
                        if (Company_id != null)
                        {
                            
                            if (Company_id != "")
                                Show_Table(Company_id, "Acquisitions", false);
                        }
                    }
                </div>


                </div>
         </div>
     } <!-- main -->


    @if (query_sub_page == "holders")
    {
        <div  id="menu_holders_firm">
            <div class="Header">
                @{
                    db_index = new Database_structure();
                    // показ имени связанной строики
                    if (Company_id != "")
                    {
                        Company selected = db_index.Companies.Where(i => i.Id == Company_id).Single();
                        @(
                                        "«" + selected.Name + " | ИНН" + selected.Inn + "» "                           
                        )

                        @if (Selected_Holder != "")
                        { 
                            Owner selected_owner = db_index.Owners.Where(o => o.Id == Selected_Holder).Single();
                            @(" | Выбранный владелец «" + selected_owner.Name + "  " + selected_owner.Address + "»  (" + Selected_Holder + ")")
                        }
                    }
                }
            </div>

            <div class="Control">
                <button class="button" @onclick="(e=> { f.Add_new_holder(Company_id); })">Добавить нового владельца</button> 

                @{
                    if (Selected_Holder != "")
                    {
                        <button  class="button" @onclick="(e => { f.Remove_exist_holder(Company_id,Selected_Holder); })">Отключить выбранного владельца</button>
                    }
                }
            </div>

            
            <div class="card_layout">
                <table width="100%">
               
                    @{
                         
                        List<string> NameX = new List<string>();
                        List<string> TableX = new List<string>();
                       

                        NameX.Add("Name"); TableX.Add("Owners");
                        NameX.Add("PhoneNumber");   TableX.Add("Owners");
                        NameX.Add("Email");         TableX.Add("Owners");

                        NameX.Add("Cost"); TableX.Add("HolderReestrs");
                        NameX.Add("Date_buy_share"); TableX.Add("HolderReestrs");
                        NameX.Add("Share"); TableX.Add("HolderReestrs");

                      
                            <tr class="card_title">
                                @foreach (String n in NameX)
                                {
                                    <td>@n</td>
                                }
                                <td> </td>
                        </tr>

                        var db_index2 = new Database_structure();

                        List<HolderReestr> reestr = db_index.HolderReestrs.Where<HolderReestr>(h => h.Company_Id == Company_id).Distinct().ToList<HolderReestr>();

                        Comparison<HolderReestr> y_comp = new Comparison<HolderReestr>(delegate (HolderReestr x, HolderReestr y) { return (x.Id.CompareTo(y.Id)); });
                        reestr.Sort(y_comp); 


                        foreach (HolderReestr h in reestr)
                        {
                            foreach (Owner o in db_index2.Owners.Where<Owner>(oi => oi.Id == h.Owner_Id).ToList<Owner>())
                            {
                                    <tr class="Editor" style="width:100%">
                                    <td><input class="long_input" type="text" value="@o.Name" @onchange="(e=> {  f.Set_value(NameX[0], o.Id.ToString(), e.Value.ToString() ,e, null, TableX[0]); })" /></td>
                                    <td><input class="long_input" type="tel" value="@o.PhoneNumber" @onchange="(e=> {  f.Set_value(NameX[1], o.Id.ToString(), e.Value.ToString() ,e, null, TableX[1]); })" /></td>
                                    <td><input class="long_input" type="email" value="@o.Email" @onchange="(e=> {  f.Set_value(NameX[2], o.Id.ToString(), e.Value.ToString() ,e, null, TableX[2]); })" /></td>
                                    <td><input class="long_input" type="number" value="@h.Cost" @onchange="(e=> {  f.Set_value(NameX[3], h.Id.ToString(), e.Value.ToString() ,e, null, TableX[3]); })" /> </td>
                                    <td><input class="long_input" type="date" value="@h.Date_buy_share.ToString(__DATE_MASK)" @onchange="(e=> {  f.Set_value(NameX[4], h.Id.ToString(), e.Value.ToString() ,e, null, TableX[4]); })" /> </td>
                                    <td><input class="long_input" type="text" value="@h.Share" @onchange="(e=> {  f.Set_value(NameX[5], h.Id.ToString(), e.Value.ToString() ,e, null, TableX[5]); })" /></td>

                                    <td> <button title="Выбрать" @onclick="(e=>{ if (Selected_Holder==o.Id) Selected_Holder=String.Empty;  else  Selected_Holder = o.Id; })"> ↓ </button> </td>

                                </tr>
                            }

                        }

                        db_index2.DisposeAsync();
                      
                    }
                </table>
            </div>

            @if (Selected_Holder != "")
            {
                if (db_index != null)
                { db_index = new Database_structure(); }
                Owner selected_owner = db_index.Owners.Where(o => o.Id == Selected_Holder).Single();

                <div class="scroll">

                    <div class="Header" width="400px">
                        Редактирование выбранного владельца
                        @(" «" + selected_owner.Name + "   " + selected_owner.Address + "» (" + Selected_Holder + ")")
                    </div>

                    <div class="inside-scroll" >
                        
                        <div class="card_layout" >
                            
                            <div class="Editor">
                                <div class="card_title"> Данные </div><br>

             
                                @{
                                    Owner o = selected_owner;
                                    string table = "Owners";
                                    List<string> NameY = new List<string>();
                                    NameY.Add("Address");
                                    NameY.Add("Inn");
                                    NameY.Add("KPP");
                                    NameY.Add("Org");

                                }
                                <div>
                                    Адрес    <textarea class="long_input" type="text" value="@o.Address" @onchange="(e=> {  f.Set_value(NameY[0], o.Id.ToString(), e.Value.ToString() ,e, null, table); })" /> <br/>
                                    ИНН <input class="long_input" type="number" value="@o.Inn" @onchange="(e=> {  f.Set_value(NameY[1], o.Id.ToString(), e.Value.ToString() ,e, null, table); })" /> <br />
                                    КПП <input class="long_input" type="number" value="@o.KPP" @onchange="(e=> {  f.Set_value(NameY[2], o.Id.ToString(), e.Value.ToString() ,e, null, table); })" /> <br />
                                    Юридическое лицо <input type="checkbox" checked="@o.Org" @onchange="(e=> {  f.Set_value(NameY[3], o.Id.ToString(), e.Value.ToString() ,e, null, table); })" /> <br />
                                </div>
                            </div>


                            <div class="Editor">
                                <div class="card_title">

                                    @{
                                        db_index = new Database_structure();
                                        Company selected_company = db_index.Companies.Where(i => i.Id == Company_id).Single();

                                        //заготовка
                                        HolderReestr holder = new HolderReestr();
                                        holder.Company_Id = selected_company.Id;
                                        holder.Owner_Id = selected_owner.Id;

                                        Link lnk = new Link(selected_company.Id, selected_owner.Id);
                                    }

                                    Связать  @(selected_owner.Name + " --->  «" + selected_company.Name + " | ИНН" + selected_company.Inn + "» ?")

                                </div>

                                <div align="center">
                                   
                                    <button class="button" @onclick="(e=>{
                                            db_index = new Database_structure();
                                            db_index.HolderReestrs.Add(holder);
                                            db_index.Links.AddAsync (lnk);
                                            db_index.SaveChanges();
                                            db_index.Dispose(); })">
                                        Связать?
                                    </button> <br>


                                    <button class="button" @onclick="(e=>{    Selected_Holder=string.Empty;  })">
                                        Отключить режим привязки
                                    </button>
                                </div>
                            </div>



                        </div>
                   </div>

               </div> <!--scroll -->

                if (db_index != null) { db_index.Dispose(); }
            }
            <!-- selected owner -->

        </div>
    }

    @if (query_sub_page == "docs")
    {
        <div id="menu_docs">
            <div style="Card">
                @{
                    if (Company_id != null)
                    {
                        if (Company_id != "")
                            Show_Table(Company_id, "Documents",true);
                    }
                }
            </div>
        </div>
    }
    

</div>


<!--- ВЕБ МОРДА ЗАКОНЧИЛАСЬ --->




@code{
    /// <summary>
    ///  Вспомогательнгые функции
    /// </summary>
    static public void set_main_page()
    {
        query_sub_page = "main";
    }

    static public void set_holders_page()
    {
        query_sub_page = "holders";
    }

    static public void set_owners_page()
    {
        query_sub_page = "owners";
    }

    static public void set_doc_page()
    {
        query_sub_page = "docs";
    }


}
